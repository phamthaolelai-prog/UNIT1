<!doctype html>
<html lang="vi">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>My Friends - English Practice (Grade 4)</title>
  <style>
    :root{--bg:#f7fbff;--card:#ffffff;--accent:#4f83ff;--muted:#666}
    *{box-sizing:border-box;font-family:Inter,system-ui,Arial,Helvetica,sans-serif}
    body{margin:0;background:linear-gradient(180deg,var(--bg),#eaf3ff);display:flex;align-items:center;justify-content:center;min-height:100vh;padding:20px}
    .wrap{width:100%;max-width:920px;background:var(--card);border-radius:20px;box-shadow:0 10px 30px rgba(20,40,80,0.08);padding:20px;display:grid;grid-template-columns:1fr 420px;gap:18px}
    @media(max-width:880px){.wrap{grid-template-columns:1fr;max-width:460px}}
    header{grid-column:1/-1;display:flex;align-items:center;gap:12px}
    header h1{margin:0;font-size:20px;color:#073b68}
    .left{padding:12px;border-radius:14px;border:3px solid rgba(79,131,255,0.08);background:linear-gradient(180deg,rgba(79,131,255,0.03),transparent)}
    .word-card{display:flex;align-items:center;justify-content:space-between;padding:18px;border-radius:12px;background:linear-gradient(90deg,#fff,#f7fbff);box-shadow:inset 0 -8px 20px rgba(79,131,255,0.02)}
    .word-big{font-size:36px;font-weight:700;color:#0b3a66}
    .controls{display:flex;gap:12px;align-items:center}
    button.icon{background:var(--accent);color:#fff;border:none;padding:10px 12px;border-radius:10px;font-weight:600;cursor:pointer;display:inline-flex;align-items:center;gap:8px}
    button.ghost{background:transparent;border:2px dashed rgba(10,40,90,0.06);padding:8px 10px;border-radius:10px}
    .next-row{display:flex;justify-content:space-between;align-items:center;margin-top:12px}
    .sentence-builder{margin-top:14px}
    .sentence-builder select{padding:8px;border-radius:8px;border:1px solid #e0ecff;margin-right:8px}
    .mic-btn{width:56px;height:56px;border-radius:50%;display:grid;place-items:center;background:#fff;border:2px solid rgba(10,40,90,0.04);cursor:pointer}
    .right{padding:12px;border-radius:12px;background:linear-gradient(180deg,#fff,#fbfdff);}
    .score{font-size:48px;font-weight:800;color:var(--accent);text-align:center}
    .msg{font-weight:700;text-align:center;margin-top:6px}
    .progress{height:12px;background:rgba(10,40,90,0.06);border-radius:10px;overflow:hidden}
    .bar{height:100%;width:0%;background:linear-gradient(90deg,var(--accent),#77b0ff)}
    .feedback{padding:10px;border-radius:10px;background:#f4fbff;margin-top:12px;min-height:56px;white-space:pre-line}
    .footer{grid-column:1/-1;text-align:center;font-size:13px;color:var(--muted);margin-top:6px}
    .badge{display:inline-block;background:linear-gradient(90deg,#fff,#f2fbff);padding:6px 10px;border-radius:999px;border:1px solid rgba(79,131,255,0.06);font-weight:700;color:#0b3a66}
    .small{font-size:13px;color:var(--muted)}
    .highlight-wrong{background:#ffdddd;color:#b00020;padding:2px 4px;border-radius:4px;margin:1px}
    .highlight-miss{background:#fff3cd;color:#7a5200;padding:2px 4px;border-radius:4px;margin:1px}
  </style>
</head>
<body>
  <div class="wrap" role="application">
    <header>
      <div style="flex:1">
        <h1>Unit 1: <span class="small">My friends</span></h1>
        <div class="small">Practice vocabulary and sentence: "Where are you from?" ‚Äî UK pronunciation</div>
      </div>
      <div style="display:flex;gap:8px;align-items:center">
        <div class="badge">Grade 4</div>
      </div>
    </header>

    <section class="left">
      <div class="word-card" id="wordCard">
        <div>
          <div class="small">Vocabulary</div>
          <div class="word-big" id="wordText">Britain</div>
          <div class="small" style="margin-top:6px;color:var(--muted)" id="phonetic">/Ààbr…™t.…ôn/</div>
        </div>

        <div style="display:flex;flex-direction:column;gap:10px;align-items:center">
          <div style="display:flex;gap:10px">
            <button class="icon" id="playWord" title="Play pronunciation">üîä Play</button>
            <button class="ghost" id="listenExample" title="Hear examples">‚ùì Example</button>
          </div>
          <div style="display:flex;gap:10px;align-items:center">
            <div class="mic-btn" id="recordWordBtn" title="Record your word">üé§</div>
            <div style="text-align:center;font-size:12px;color:var(--muted)">Tap to record</div>
          </div>
        </div>
      </div>

      <div class="next-row">
        <div class="small">Word <span id="indexDisplay">1</span> / <span id="totalDisplay">7</span></div>
        <div style="display:flex;gap:8px">
          <button id="prevBtn" class="ghost">‚óÄ Prev</button>
          <button id="nextBtn" class="icon">Next ‚ñ∂</button>
        </div>
      </div>

      <div class="sentence-builder">
        <div class="small">Sentence practice</div>
        <div style="margin-top:8px;display:flex;flex-wrap:wrap;gap:8px;align-items:center">
          <select id="subjectSel"><option>I</option><option>He</option><option>She</option></select>
          <select id="countrySel"></select>
          <button id="playSentence" class="icon">üîä Play</button>
          <div class="mic-btn" id="recordSentenceBtn">üé§</div>
          <button id="checkSentence" class="ghost">Check</button>
        </div>
        <div class="small" style="margin-top:8px;color:var(--muted)">Sample structure: Where are you from? ‚Äî I'm from ... / Where is she/he from? ‚Äî She's/He's from ...</div>
      </div>
    </section>

    <aside class="right">
      <div style="display:flex;justify-content:space-between;align-items:center">
        <div style="font-weight:700">Immediate score</div>
        <div class="small">Scale 1‚Äì10</div>
      </div>

      <div style="margin-top:8px;display:flex;gap:12px;align-items:center;justify-content:center;flex-direction:column">
        <div class="score" id="scoreDisplay">‚Äì</div>
        <div class="msg" id="msgDisplay">No attempt yet</div>
        <div class="progress" style="width:100%"><div class="bar" id="scoreBar"></div></div>
      </div>

      <div class="feedback" id="feedbackBox">Feedback will appear here. Try reading clearly and slowly. Use UK accent model.</div>

      <div style="margin-top:12px;display:flex;justify-content:space-between;align-items:center">
        <div class="small">Mode: <strong id="modeLabel">Word</strong></div>
        <div class="small">Don't worry ‚Äî no history saved</div>
      </div>
    </aside>

    <div class="footer">
      <div class="small">Responsive ‚Äî works on mobile and desktop. Host on Netlify / GitHub Pages / Glitch and share the URL or QR code directly in Google Classroom.</div>
    </div>
  </div>

  <script>
    const words = [
      {w:'Britain',p:'/Ààbr…™t.…ôn/'},
      {w:'America',p:'/…ôÀàm…õr.…™.k…ô/'},
      {w:'Australia',p:'/…ísÀàtre…™.li.…ô/'},
      {w:'Singapore',p:'/Ààs…™≈ã.…ôp…îÀêr/'},
      {w:'Malaysia',p:'/m…ôÀàle…™. í…ô/'},
      {w:'Thailand',p:'/Ààta…™.l√¶nd/'},
      {w:'Japan',p:'/d í…ôÀàp√¶n/'}
    ];

    const wordText=document.getElementById('wordText');
    const phonetic=document.getElementById('phonetic');
    const indexDisplay=document.getElementById('indexDisplay');
    const totalDisplay=document.getElementById('totalDisplay');
    const playWord=document.getElementById('playWord');
    const nextBtn=document.getElementById('nextBtn');
    const prevBtn=document.getElementById('prevBtn');
    const recordWordBtn=document.getElementById('recordWordBtn');
    const recordSentenceBtn=document.getElementById('recordSentenceBtn');
    const subjectSel=document.getElementById('subjectSel');
    const countrySel=document.getElementById('countrySel');
    const playSentence=document.getElementById('playSentence');
    const checkSentence=document.getElementById('checkSentence');
    const scoreDisplay=document.getElementById('scoreDisplay');
    const msgDisplay=document.getElementById('msgDisplay');
    const scoreBar=document.getElementById('scoreBar');
    const feedbackBox=document.getElementById('feedbackBox');
    const modeLabel=document.getElementById('modeLabel');

    let index=0; totalDisplay.textContent=words.length; indexDisplay.textContent=1;

    function populateCountries(){
      countrySel.innerHTML='';
      words.forEach(w=>{const opt=document.createElement('option');opt.value=w.w;opt.textContent=w.w;countrySel.appendChild(opt)})
    }
    populateCountries();

    function updateCard(){
      const cur=words[index];
      wordText.textContent=cur.w;
      phonetic.textContent=cur.p;
      indexDisplay.textContent=index+1;
      modeLabel.textContent='Word';
    }
    updateCard();

    let voices=[]; function loadVoices(){voices=speechSynthesis.getVoices(); if(!voices.length){setTimeout(loadVoices,100)}} loadVoices();
    function getUKVoice(){if(!voices.length) voices=speechSynthesis.getVoices(); let v=voices.find(x=>/en-?gb|british|uk/i.test(x.lang+' '+(x.name||''))); if(!v) v=voices.find(x=>/en-?us/i.test(x.lang+' '+(x.name||''))); return v||null;}
    function speak(text){const u=new SpeechSynthesisUtterance(text); const uk=getUKVoice(); if(uk) u.voice=uk; u.lang=uk?uk.lang:'en-GB'; u.rate=0.95; speechSynthesis.cancel(); speechSynthesis.speak(u);}

    playWord.addEventListener('click',()=>{speak(words[index].w)})
    playSentence.addEventListener('click',()=>{const subj=subjectSel.value; const country=countrySel.value; let sample=subj==='I'?`Where are you from? I'm from ${country}.`:`Where is ${subj.toLowerCase()} from? ${subj}'s from ${country}.`; speak(sample);})
    nextBtn.addEventListener('click',()=>{index=(index+1)%words.length; updateCard();})
    prevBtn.addEventListener('click',()=>{index=(index-1+words.length)%words.length; updateCard();})

    function levenshtein(a,b){a=a.toLowerCase(); b=b.toLowerCase(); const m=a.length,n=b.length; if(m===0)return n;if(n===0)return m; const dp=Array.from({length:m+1},()=>new Array(n+1).fill(0)); for(let i=0;i<=m;i++)dp[i][0]=i; for(let j=0;j<=n;j++)dp[0][j]=j; for(let i=1;i<=m;i++)for(let j=1;j<=n;j++){const cost=a[i-1]===b[j-1]?0:1; dp[i][j]=Math.min(dp[i-1][j]+1,dp[i][j-1]+1,dp[i-1][j-1]+cost);} return dp[m][n];}

    function computeScore(target,recognized){if(!recognized)return 1; const clean=s=>s.replace(/[^a-zA-Z\s]/g,'').replace(/\s+/g,' ').trim(); const a=clean(target); const b=clean(recognized); const maxLen=Math.max(a.length,b.length); if(maxLen===0)return 1; const d=levenshtein(a,b); const similarity=Math.max(0,1-d/maxLen); const scaled=Math.round(similarity*9)+1; return Math.min(10,Math.max(1,scaled));}

    function highlightDifferences(target,recognized){const ta=target.toLowerCase().split(/\s+/); const ra=recognized.toLowerCase().split(/\s+/); let fb=""; let max=Math.max(ta.length,ra.length); for(let i=0;i<max;i++){if(ta[i]&&ra[i]){ if(ta[i]===ra[i]) fb+=ta[i]+" "; else fb+=`<span class='highlight-wrong'>${ra[i]}</span>(expected: ${ta[i]}) `; } else if(ta[i]&&!ra[i]){ fb+=`<span class='highlight-miss'>missing ${ta[i]}</span> `; } else if(!ta[i]&&ra[i]){ fb+=`<span class='highlight-wrong'>extra ${ra[i]}</span> `; }} return fb.trim();}

    function showScore(score,target,recognized){scoreDisplay.textContent=score; scoreBar.style.width=(score*10)+'%'; let diffs=highlightDifferences(target,recognized); if(score>=8){msgDisplay.textContent='Excellent!'; feedbackBox.innerHTML=`Great pronunciation!\nRecognized: "${recognized}"\n${diffs}`; applause();} else if(score>=5){msgDisplay.textContent='Good ‚Äî keep practicing'; feedbackBox.innerHTML=`Not bad. Recognized: "${recognized}"\n${diffs}`; encourage();} else {msgDisplay.textContent='Try again'; feedbackBox.innerHTML=`Needs improvement. Recognized: "${recognized}"\n${diffs}`; encourage();}}

    function encourage(){speak('You can do it better. Try again!')}
    function applause(){speak('Excellent! Well done!'); playClap();}
    function playClap(){try{const ctx=new (window.AudioContext||window.webkitAudioContext)(); const t=ctx.currentTime; for(let i=0;i<6;i++){const o=ctx.createOscillator(); const g=ctx.createGain(); o.type='triangle'; o.frequency.setValueAtTime(600-i*30,t+i*0.03); g.gain.setValueAtTime(0.5/(i+1),t+i*0.03); o.connect(g); g.connect(ctx.destination); o.start(t+i*0.03); o.stop(t+i*0.03+0.05);}}catch(e){}}

    function getRecognition(){const SpeechRecognition=window.SpeechRecognition||window.webkitSpeechRecognition||null; if(!SpeechRecognition)return null; const rec=new SpeechRecognition(); rec.lang='en-GB'; rec.interimResults=false; rec.maxAlternatives=3; return rec;}

    function recordAndScore(targetText,mode){const rec=getRecognition(); if(!rec){alert('Speech Recognition not supported in this browser.');return;} feedbackBox.textContent='Listening... please speak clearly.'; scoreDisplay.textContent='...'; scoreBar.style.width='0%'; msgDisplay.textContent='Listening'; rec.onresult=(ev)=>{const best=ev.results[0][0].transcript; const score=computeScore(targetText,best); showScore(score,targetText,best);}; rec.onerror=(ev)=>{feedbackBox.textContent='No voice detected or recognition error. Try again.'; scoreDisplay.textContent='-'; msgDisplay.textContent='Error';}; try{rec.start();}catch(e){alert('
